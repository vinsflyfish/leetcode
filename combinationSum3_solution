class Solution {
   void getResult(vector<vector<int> > &ret,const int nLen,vector<int> path,int index,int target){
        if(path.size() == nLen && target == 0){
            ret.push_back(path);
            return;
        }
        if(index > 9 || target < 0) return;
        path.push_back(index);
        getResult(ret,nLen,path,index+1,target - index);
        path.pop_back();
        getResult(ret,nLen,path,index+1,target);
   }
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> ret;
        if(k == 0) return ret;
        if(n == 0) return ret;
        vector<int> path;
        getResult(ret,k,path,1,n);
        return  ret;
    }
};
